/* All coding, design, ideas, fantastical inventions, etc. etc. copyright 2014 Kyle Conrad */
/* Contact: kyle@kyleconrad.com */

@charset "utf-8";

$experimental-support-for-khtml: false;
@import "bourbon/bourbon";
@import "includes/reset";


/* MIX-INS */
@mixin breakpoint($point) {
	@if $point == large {
		@media only screen and (min-width : 1401px) { @content; }
	}
	@else if $point == landscape {
		@media only screen and (min-width : 802px) and (max-width : 1025px) { @content; }
	}
	@else if $point == portrait {
		@media only screen and (min-width : 642px) and (max-width : 801px) { @content; }
	}
	@else if $point == mobile {
		@media only screen and (max-width : 641px) { @content; }
	}
}
@mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -o-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

@mixin textGlitch($name, $intensity, $textColor, $background, $highlightColor1, $highlightColor2, $width, $height) {
  
  color: $textColor;
  position: relative;
  $steps: $intensity;
  
  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          #{percentage($i*(1/$steps))} {
            clip: rect(
              random($height)+px,
              $width+px,
              random($height)+px,
              0
            );
          }
        }
      }
    }
  }
  &:before,
  &:after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background: $background;
    clip: rect(0, 0, 0, 0); 
  }
  &:after {
    left: 2px;
    text-shadow: -1px 0 $highlightColor1;
    -webkit-animation: #{$name}-anim-1 2s infinite linear alternate-reverse;
  }
  &:before {
    left: -2px;
    text-shadow: 2px 0 $highlightColor2; 
    -webkit-animation: #{$name}-anim-2 3s infinite linear alternate-reverse;
  }
  
}

/* ADDITIONAL RESET */
html {
	min-height: 100%;
	height: 100%;
	-webkit-text-size-adjust: none;
}
body {
	height: 100%;
	width: 100%;
	position: relative;
	overflow-x: hidden;
}
* {
   	@include box-sizing(border-box);

   	&:before,
   	&:after {
   		@include box-sizing(border-box);
   	}
}

/* CLEAR & FLOATS */
.left {
	float: left !important;
}
.right {
	float: right !important;
}
.clearfix {
	&:after {
		clear: both;
		display: table;
		content: '';
	}
}

.nomobile {
	@include breakpoint(mobile) {
		display: none;
	}
}


/* INCLUDED */
@import 'base/grid';
@import 'base/zindex';

@import 'base/glyphs';
@import 'base/text';
@import 'base/images';

@import 'base/nav';
@import 'base/header';
@import 'base/main';
@import 'base/footer';