/* All coding, design, ideas, fantastical inventions, etc. etc. copyright 2014 Kyle Conrad */
/* Contact: kyle@kyleconrad.com */
/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* MIX-INS */
/* ADDITIONAL RESET */
html {
  min-height: 100%;
  height: 100%;
  -webkit-text-size-adjust: none; }

body {
  height: 100%;
  width: 100%;
  position: relative;
  overflow-x: hidden; }

* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }
  *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box; }

/* CLEAR & FLOATS */
.left {
  float: left !important; }

.right {
  float: right !important; }

.clearfix:after {
  clear: both;
  display: table;
  content: ''; }

@media only screen and (max-width: 641px) {
  .nomobile {
    display: none; } }

/* INCLUDED */
/* GRID */
nav, div, article, section, main, footer, header {
  display: block;
  position: relative; }

/* Z-INDEX & LAYERS */
/* GLYPHS */
/* TEXT SETTINGS */
* {
  text-rendering: optimizeLegibility;
  -webkit-font-feature-settings: "kern";
  -moz-font-feature-settings: "kern";
  -moz-font-feature-settings: "kern=1";
  font-feature-settings: "kern" 1;
  font-kerning: normal; }

/* IMAGES */
img {
  display: block;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0; }

/* NAV BAR */
/* HEADER */
/* MAIN AREAS */
body {
  background-image: url("/img/glitch.gif");
  font-family: 'Anonymous Pro';
  color: black;
  font-size: 16px; }

*:focus {
  outline: none; }

#map {
  position: absolute;
  width: 100%;
  bottom: 0;
  left: 0;
  height: 80%; }

.fly-btn {
  padding: 5px;
  background-color: #F74A3D;
  transition: all .1s;
  color: white;
  font-weight: bold;
  margin-bottom: .4rem;
  display: inline-block;
  cursor: pointer; }
  .fly-btn:hover {
    background-color: #de1809; }

/*
  (TEXT) PARAMS
  =================
  1. Namespace
  2. Intensity
  3. Text color
  4. Background color (flat)
  5. Highlight #1 color
  6. Highlight #2 color
  7. Width (px)
  8. Height (px)
*/
/* FOOTER */

/*# sourceMappingURL=data:application/json;base64, */